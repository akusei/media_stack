---
processors:
  - rename:
      field: message
      target_field: log.original

  - dissect:
      field: log.original
      pattern: '%{+@timestamp/1} %{+@timestamp/2} %{event.action} %{?->} [%{}]: %{log.level->} %{message}'
      append_separator: T
      on_failure:
        - drop: {}

  - drop:
      if: ctx.event.action != 'fail2ban.actions' || ctx.log.level != 'NOTICE'

  - dissect:
      field: message
      pattern: '[%{event.dataset}] %{event.reason}'
      on_failure:
        - drop: {}

  - dissect:
      field: event.reason
      pattern: '%{event.action} %{source.address}'
      on_failure:
        - drop: {}

  - drop:
      if: "!['Ban', 'Unban'].contains(ctx.event.action)"

  - remove:
      field: message

  - set:
      field: event.dataset
      value: "fail2ban.{{event.dataset}}"

  - set:
      if: ctx.source?.address != null
      field: source.ip
      value: "{{source.address}}"

  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true

  - set:
      field: event.category
      value: authentication
  - set:
      field: event.kind
      value: event
  - set:
      field: event.module
      value: fail2ban

  - append:
      field: event.type
      value:
        - access
        - user
  - append:
      if: ctx.event.action == 'Ban'
      field: event.type
      value:
        - denied
  - append:
      if: ctx.event.action == 'Unban'
      field: event.type
      value:
        - allowed

  - append:
      if: ctx.source?.ip != null
      field: related.ip
      value: "{{source.ip}}"
